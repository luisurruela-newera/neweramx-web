---
import Card from "../global/card.astro";

const soluciones = [
  {
    icon: "robotic-process-automation.png",
    title: "Automatización Robótica de Procesos (RPA)",
    body: "Este tipo de flujo se denomina flujo de escritorio y se utiliza cuando no hay un conector personalizado o una API para vincular a un conector externo aplicación. Con RPA, la automatización implica configurar el flujo para aprender una secuencia de pasos que sigue.",
    classes: "currentCard",
  },
  {
    icon: "cloud-based-digital-process-automation.png",
    title: "Automatización de procesos digitales (DPA) basada en la nube",
    body: "Los flujos DDPA se denominan flujos en la nube y tienen conectores incorporados para cerca de 380+ aplicaciones, junto con la provisión para crear conectores personalizados. Aquí, los datos y la funcionalidad se configuran conectándose a una aplicación externa como SharePoint.",
    classes: "currentCard",
  },
];

const flujos = [
  {
    icon: "schedule-flow.png",
    title: "Flujo programado",
    body: "Los flujos programados se ejecutan a una hora predefinida con una acción definida a realizar. Por ejemplo, puedes crear un flujo programado que liste todas las aprobaciones en un horario programado.",
    classes: "currentCard",
  },
  {
    icon: "automated-flow.png",
    title: "Flujo Automatizado",
    body: "Un flujo automatizado se ejecuta cuando se cumple una condición específica, como cuando un nuevo correo electrónico proviene de una persona específica. La acción aquí es comunicar el evento a la aplicación a través de un conector.",
    classes: "currentCard",
  },
  {
    icon: "instant-flow.png",
    title: "Flujo instantáneo",
    body: "Los flujos instantáneos se activan mediante una acción específica, como presionar un botón, y realizan la tarea configurada. Un elemento común por ejemplo, enviará una notificación a su equipo con solo hacer clic en un botón.",
    classes: "currentCard",
  },
];

const flujos2 = [
  {
    icon: "ul-flow.png",
    title: "Flujo de interfaz de usuario",
    body: "Un flujo de interfaz de usuario automatiza las tareas repetitivas. Registra las acciones realizadas por un usuario y, a continuación, ejecuta automáticamente la secuencia de pasos. Un ejemplo de flujos de interfaz de usuario es cuando un usuario trabaja con varias aplicaciones interrelacionadas en un proceso de negocio.",
    classes: "currentCard",
  },
  {
    icon: "business-process-flows.png",
    title: "Flujos de Procesos de Negocio",
    body: "Un flujo de proceso de negocio es un diagrama de flujo que proporciona una representación gráfica de cómo funciona un proceso de negocio y los pasos y las acciones requeridas. Un ejemplo será un programa de formación para la incorporación de un nuevo empleado.",
    classes: "currentCard",
  },
];
---

<section class="bg-light p-0 py-md-5">
  <div class="container p-0 py-md-3">
    <div class="col-md-8 mx-auto text-center">
      <h2 class="text-primary mb-4">Soluciones Power Automate de New Era</h2>
      <p>
        Una secuencia de automatización se define como un "flujo" en Power Automate. Nuestras soluciones cubren todo el espectro de
        capacidades de automatización La suite tiene, lo que le brinda la ventaja de automatizar una amplia gama de tareas para sus
        requisitos negocio. Power Automate tiene dos tipos de automatización, como se muestra a continuación
      </p>

      <div class="row py-4">
        {
          soluciones.map((config) => (
            <div class="col-md-6 mb-4 card-group">
              <Card config={config} />
            </div>
          ))
        }
      </div>

      <h3 class="mt-4 mb-5 text-primary">
        Estos son los diferentes flujos que desarrollamos mediante automatización personalizada con Power Automate:
      </h3>
    </div>

    <div class="row py-1">
      {
        flujos.map((config) => (
          <div class="col-4 mb-4 card-group">
            <Card config={config} />
          </div>
        ))
      }
    </div>

    <div class="col-8 mx-auto">
      <div class="row">
        {
          flujos2.map((config) => (
            <div class="col-6 mb-4 card-group">
              <Card config={config} />
            </div>
          ))
        }
      </div>
    </div>
  </div>
</section>
