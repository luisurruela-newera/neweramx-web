---
interface Props {
  config: {
    itemsPerView?: number;
    height?: number;
    mobileHeight?: number;
    width?: string;
    items: ISlider[];
  };
}

interface ISlider {
  image?: string;
  alt?: string;
  url?: string;
}

const base = import.meta.env.BASE_URL;
const { config } = Astro.props;
const sliderId = `coverSlider-${Math.random().toString(36).substring(2, 9)}`;
const sliderHeight = config.height || 420;

const itemsPerView = config.itemsPerView ?? 5;
const groupedItems: ISlider[][] = [];
const mobileGroupedItems: ISlider[][] = [];
for (let i = 0; i < config.items.length; i += itemsPerView) {
  groupedItems.push(config.items.slice(i, i + itemsPerView));
  mobileGroupedItems.push(config.items.slice(i, i + 2));
}
---

<div id={sliderId} class="carousel slide d-none d-md-block" data-bs-ride="carousel" style={`max-width: ${config.width || "100%"}; margin: auto;`}>
  {
    groupedItems.length > 1 && (
      <div class="carousel-indicators">
        {groupedItems.map((_, index) => (
          <button
            type="button"
            data-bs-target={`#${sliderId}`}
            data-bs-slide-to={index}
            class={index === 0 ? "active" : ""}
            aria-current={index === 0 ? "true" : "false"}
            aria-label={`Slide ${index + 1}`}
          />
        ))}
      </div>
    )
  }

  <div class="carousel-inner">
    {
      groupedItems.map((group, index) => (
        <div class={`carousel-item ${index === 0 ? "active" : ""}`}>
          <div class="d-flex justify-content-around align-items-center h-100 logos-container">
            {group.map((logo) => (
              <div class="logo-item text-center">
                {logo.url ? (
                  <a href={logo.url} target="_blank" rel="noopener noreferrer">
                    <img src={`${base}assets/images/${logo.image}`} alt={logo.alt || "Logo"} class="img-fluid" />
                  </a>
                ) : (
                  <img src={`${base}assets/images/${logo.image}`} alt={logo.alt || "Logo"} class="img-fluid" />
                )}
              </div>
            ))}
          </div>
        </div>
      ))
    }
  </div>

  {
    config.items.length > 1 && (
      <div>
        <button class="carousel-control-prev" type="button" data-bs-target={`#${sliderId}`} data-bs-slide="prev">
          <span class="carousel-control-prev-icon" aria-hidden="true" />
          <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target={`#${sliderId}`} data-bs-slide="next">
          <span class="carousel-control-next-icon" aria-hidden="true" />
          <span class="visually-hidden">Next</span>
        </button>
      </div>
    )
  }
</div>

<div id={sliderId} class="carousel slide d-md-none" data-bs-ride="carousel" style={`max-width: ${config.width || "100%"}; margin: auto;`}>
  {
    mobileGroupedItems.length > 1 && (
      <div class="carousel-indicators">
        {mobileGroupedItems.map((_, index) => (
          <button
            type="button"
            data-bs-target={`#${sliderId}`}
            data-bs-slide-to={index}
            class={index === 0 ? "active" : ""}
            aria-current={index === 0 ? "true" : "false"}
            aria-label={`Slide ${index + 1}`}
          />
        ))}
      </div>
    )
  }

  <div class="logo-list-mobile">
    {
      mobileGroupedItems.map((group, index) => (
        <div class={`carousel-item ${index === 0 ? "active" : ""}`}>
          <div class="d-flex justify-content-around align-items-center h-100 logos-container">
            {group.map((logo) => (
              <div class="logo-item text-center">
                {logo.url ? (
                  <a href={logo.url} target="_blank" rel="noopener noreferrer">
                    <img src={`${base}assets/images/${logo.image}`} alt={logo.alt || "Logo"} class="img-fluid" />
                  </a>
                ) : (
                  <img src={`${base}assets/images/${logo.image}`} alt={logo.alt || "Logo"} class="img-fluid" />
                )}
              </div>
            ))}
          </div>
        </div>
      ))
    }
  </div>
</div>

<style
  define:vars={{
    sliderHeight: `${sliderHeight}px`,
    itemsPerView: itemsPerView,
  }}
  lang="scss"
>
  @use "../../styles/global/_config.scss" as *;

  .logo-carousel .carousel-item {
    min-height: var(--sliderHeight);
    padding: 1rem 0;
  }

  .carousel-indicators {
    margin-bottom: -3rem;
  }

  @media screen and (max-width: 768px) {
    .carousel-indicators {
      margin-bottom: -0.7rem;
    }
  }

  .carousel-indicators button {
    background-color: $secondary-color !important;
  }

  .carousel {
    min-width: 100%;
    min-height: var(--sliderHeight);
  }

  .logos-container {
    gap: 2rem;
    padding: 0 2rem;
  }

  .logo-item {
    flex: 1;
  }

  .logo-item img {
    max-height: 100px;
    max-width: 100%;
    object-fit: contain;
    opacity: 1;
    transition: opacity 0.3s ease;
  }
  .logo-item a:hover img,
  .logo-item img:hover {
    opacity: 1;
  }

  .logo-carousel .carousel-control-prev-icon,
  .logo-carousel .carousel-control-next-icon {
    filter: invert(1) grayscale(100);
    background-color: rgba(128, 128, 128, 0.5) !important;
    border-radius: 50%;
    padding: 0.5rem;
    width: 2.5rem;
    height: 2.5rem;
  }

  .logo-carousel .carousel-control-prev {
    left: -0.5rem;
  }
  .logo-carousel .carousel-control-next {
    right: -0.5rem;
  }

  .logo-list-mobile {
    width: 100%; // O un max-width si prefieres
    margin: 0 auto;
    padding: 1rem; // Espacio alrededor de la lista
  }

  .logo-list-item {
    margin-bottom: 1.5rem; // Espacio entre logos verticales
    &:last-child {
      margin-bottom: 0; // Sin margen inferior en el último
    }

    img {
      max-height: 60px; // Altura máxima para logos en la lista vertical
      max-width: 80%; // Ancho máximo para evitar que sean demasiado grandes
      object-fit: contain;
      margin: 0 auto; // Centrar la imagen si es más pequeña que el contenedor
      display: block; // Asegura que el margen auto funcione
    }
  }
</style>
