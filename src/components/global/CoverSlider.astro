---
interface Props {
  config: {
    background?: string;
    height?: number;
    mobileHeight?: number;
    width?: string;
    items: ISlider[];
  };
}

interface ISlider {
  image?: string;
  title?: string;
  description?: string;
  background?: string;
  overlayBackground?: string;
  button?: {
    url: string;
    text: string;
    classes: string;
  };
}

const { config } = Astro.props;
const sliderId = `coverSlider-${Math.random().toString(36).substring(2, 9)}`;
const sliderHeight = config.height || 420;
const mobileHeight = config.mobileHeight || 50;
---

<div id={sliderId} class="carousel slide" data-bs-ride="carousel" style={`max-width: ${config.width || "100%"}; margin: auto;`}>
  {
    config.items.length > 1 && (
      <div class="carousel-indicators">
        {config.items.map((_, index) => (
          <button
            type="button"
            data-bs-target={`#${sliderId}`}
            data-bs-slide-to={index}
            class={index === 0 ? "active" : ""}
            aria-current={index === 0 ? "true" : "false"}
            aria-label={`Slide ${index + 1}`}
          />
        ))}
      </div>
    )
  }

  <div class="carousel-inner">
    {
      config.items.map((slide, index) => {
        return (
          <div
            class={`carousel-item ${index === 0 ? "active" : ""} ${config.background ? config.background : "bg-white"}`}
            style={`background: ${slide.background ? `url(${slide.background}) top center no-repeat; background-size: cover;` : "transparent"}`}
          >
            {slide.overlayBackground && <div class="overlay" style={`--overlay-background: ${slide.overlayBackground}`} />}
            {(slide.title || slide.description || slide.button) && (
              <div class="carousel-caption text-center">
                {slide.title && <h5 class="display-5 fw-bold">{slide.title}</h5>}
                {slide.description && <p class="lead fs-5">{slide.description}</p>}
                {slide.button && (
                  <a
                    href={slide.button.url}
                    class={`btn ${slide.button.classes || "btn-primary"} mt-3`}
                    role="button"
                    target={slide.button.url.startsWith("http") ? "_blank" : "_self"}
                    rel={slide.button.url.startsWith("http") ? "noopener noreferrer" : undefined}
                  >
                    {slide.button.text}
                  </a>
                )}
              </div>
            )}
          </div>
        );
      })
    }
  </div>

  {
    config.items.length > 1 && (
      <div>
        <button class="carousel-control-prev" type="button" data-bs-target={`#${sliderId}`} data-bs-slide="prev">
          <span class="carousel-control-prev-icon" aria-hidden="true" />
          <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target={`#${sliderId}`} data-bs-slide="next">
          <span class="carousel-control-next-icon" aria-hidden="true" />
          <span class="visually-hidden">Next</span>
        </button>
      </div>
    )
  }
</div>

<style define:vars={{ sliderHeight: `${sliderHeight}px`, mobileHeight: `${mobileHeight}px` }}>
  .carousel,
  .carousel-item {
    min-height: var(--mobileHeight);
    position: relative;
  }

  @media (min-width: 768px) {
    .carousel,
    .carousel-item {
      min-height: var(--sliderHeight);
    }
  }

  @media screen and (max-width: 768px) {
    .carousel-caption {
      bottom: 20% !important;

      h5 {
        font-size: 24px;
      }

      p,
      a {
        font-size: 14px !important;
      }
    }
  }

  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
    background: var(--overlay-background);
    pointer-events: none;
  }

  .carousel-item {
    background-size: cover;
    background-position: center center;
    background-repeat: no-repeat;
  }

  .carousel-caption {
    position: absolute;
    right: 15%;
    bottom: 25%;
    left: 15%;
    padding-top: 1.25rem;
    padding-bottom: 1.25rem;
    color: #fff;
    text-align: center;
    z-index: 2;
  }

  .carousel-caption h5,
  .carousel-caption p {
    text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);
  }
</style>
